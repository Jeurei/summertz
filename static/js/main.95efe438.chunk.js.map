{"version":3,"sources":["styled-components.ts","utls/telRegExp.tsx","constants/constans.tsx","api/api.ts","components/checkbox.tsx","components/Input.tsx","components/label.tsx","components/formField.tsx","components/datepickerField.tsx","components/maskedInput.tsx","components/passanger.tsx","utls/isEmpty.tsx","utls/calculateAge.tsx","components/load.tsx","components/infoPopup.tsx","components/dialog.tsx","components/form.tsx","theme.ts","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["VARIANT","Wrapper","styled","div","theme","up","breakPoints","sm","md","lg","Div","compose","typography","color","space","layout","position","flexbox","grid","Span","span","Heading","h1","P","p","Form","FormComponent","Fieldset","fieldset","CheckboxContainer","HiddenCheckbox","Field","attrs","name","disabled","type","id","Icon","svg","StyledCheckbox","checked","colors","secondary","white","inactive","radii","black","Hint","Label","label","fontWeights","bold","LabelStar","LabelWithHint","inputStyles","InputError","Input","placeholder","className","component","render","MaskedInput","MaskedInputComponent","mask","onChange","onBlur","alwaysShowMask","value","Button","button","onClick","down","PrimaryButton","SecondaryButton","Diadlog","InfoPopup","telRegExp","inputMasksMap","yupTest","submitForm","values","a","axios","post","Checkbox","labelWrap","props","content","viewBox","points","children","useFormikContext","touched","errors","width","getIn","LabelComponent","textOrNode","mb","pb","Formfield","labelTextOrNode","required","display","flexDirection","alignItems","height","fill","d","DatePickerField","form","setFieldValue","handleBlur","field","selected","val","dateFormat","customInput","showMask","locale","ru","Passanger","handleChange","isInvalid","isValid","fss","ml","fontWeight","gridColumnGap","gridTemplateColumns","gridRowGap","date","obj","Object","keys","length","isTarifDisabled","dob","differenceInYears","Date","isChild","agreement","Load","state","loading","size","closeHanlder","request","errorMessage","useState","isLoading","setLoading","isSuccess","setSucceses","resetForm","useEffect","alignSelf","justifyContent","fontSize","Dialog","formInitialValues","surname","fathersName","snils","sex","citezenship","docType","docNum","tarif","tel","email","formInitialValue","passangers","schema","yup","shape","of","matches","typeError","moreThan","onFormSubmitHanlder","res","hidden","initialValues","validationSchema","onSubmit","console","log","dirty","setSubmitting","isSubmitting","helpers","map","el","idx","as","margin","bg","remove","top","left","pt","mr","push","textAlign","customMediaQuery","maxWidth","breakPointsMap","xl","breakpoints","fontSizes","regular","medium","lineHeights","breakpoint","primary","grey","App","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uLAyBKA,E,kHAAAA,O,qBAAAA,I,0BAAAA,M,KAkBE,IAAMC,EAAUC,IAAOC,IAAV,wDAGhB,oBAAGC,MAASC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,YAAhB,sBACED,EAAGC,EAAYC,IADjB,4BAEYD,EAAYC,GAFxB,2BAKEF,EAAGC,EAAYE,IALjB,2BAMWF,EAAYE,GANvB,0BASEH,EAAGC,EAAYG,IATjB,2BAUWH,EAAYG,GAVvB,kBAeSC,EAAMR,IAAOC,IAAV,kCACZQ,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAUpDC,GAPOjB,IAAOC,IAAV,oFAIbQ,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAG7ChB,IAAOkB,KAAV,kCACbT,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,OAGpDG,EAAUnB,IAAOoB,GAAV,gDAEhBX,YAAQC,IAAYC,IAAOC,IAAOC,MAGzBQ,EAAIrB,IAAOsB,EAAV,mEAODC,EAAOvB,YAAOwB,IAAPxB,CAAH,kCACbS,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAGpDS,EAAWzB,IAAO0B,SAAV,6EAIjBjB,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAGpDW,EAAoB3B,IAAOC,IAAV,iFAoBjB2B,EAAiB5B,YAAO6B,KAAOC,OAC1C,gBAAGC,EAAH,EAAGA,KAAH,IAASC,SAAT,MAAiC,CAC/BC,KAAM,WACNF,OACAG,GAAIH,EACJC,cAJF,YAD4BhC,CAAH,kCAVT,yJAqBLmC,EAAOnC,IAAOoC,IAAV,mFAWJC,EAAiBrC,IAAOC,IAAV,iOAIX,gBACZqC,EADY,EACZA,QADY,IAEZN,gBAFY,aAGZ9B,MACEqC,OAAUC,EAJA,EAIAA,UAAWC,EAJX,EAIWA,MAAOC,EAJlB,EAIkBA,SAJlB,OAMPJ,EAAWN,EAAWU,EAAWF,EAAaC,KACpC,qBAAGvC,MAASyC,MAAoBrC,MAE7C,gBACAgC,EADA,EACAA,QADA,IAEApC,MACEqC,OAAUK,EAHZ,EAGYA,MAAOH,EAHnB,EAGmBA,MAHnB,OAKKH,EAAUG,EAAQG,IAGzBT,GACc,qBAAGG,QAAyB,UAAY,YAI7CO,EAAO7C,IAAOkB,KAAV,6WAmBJ4B,EAAQ9C,IAAO+C,MAAV,yDACD,qBACb7C,MACE8C,YAAeC,OAGjBrC,KAGSsC,GAAYlD,IAAOkB,KAAV,oGAOTiC,GAAgBnD,YAAO8C,EAAP9C,CAAH,8JAMpB6C,GAMAO,GAAW,+jBAmCJC,GAAarD,IAAOkB,KAAV,yIASVoC,GAAQtD,YAAO6B,KAAOC,OACjC,oBACEG,YADF,MACS,OADT,MAEEsB,mBAFF,MAEgB,GAFhB,EAGExB,EAHF,EAGEA,KACAyB,EAJF,EAIEA,UAJF,IAKEC,iBALF,MAKc,QALd,EAMEC,EANF,EAMEA,OANF,IAOE1B,SAPF,MAQO,CACLC,OACAsB,cACAxB,OACAyB,YACAC,YACAC,SACA1B,cAfF,YADmBhC,CAAH,wGAmBdoD,IAGoB,qBAClBlD,MACEqC,OAAUG,YAOLiB,GAAc3D,YAAO4D,KAAsB9B,OACtD,kBAA6E,CAC3EI,GADF,EAAGA,GAEDH,KAFF,EAAOA,KAGL8B,KAHF,EAAaA,KAIXC,SAJF,EAAmBA,SAKjBC,OALF,EAA6BA,OAM3BP,UANF,EAAqCA,UAOnCQ,eAPF,EAAgDA,eAQ9CC,MARF,EAAgEA,SADvCjE,CAAH,kCAYpBoD,IAGSc,GAASlE,IAAOmE,OAAOrC,OAAc,kBAAwB,CACxEG,KADgD,EAAGA,KAEnDmC,QAFgD,EAASA,WAArCpE,CAAH,0tBAsBfS,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAGpD,qBACPd,MACEqC,OAAUG,YAKd,oBAAGxC,MAASmE,EAAZ,EAAYA,KAAMjE,EAAlB,EAAkBA,YAAamC,EAA/B,EAA+BA,OAA/B,sBACE8B,EAAKjE,EAAYE,IADnB,sCAEsBiC,EAAOC,UAF7B,uDAIWD,EAAOE,MAJlB,4GAWwBF,EAAOG,SAX/B,6BAYaH,EAAOK,MAZpB,4BAsBoB,qBAAG1C,MAASqC,OAAsBG,YAC7C,qBAAGxC,MAASqC,OAAsBK,SAIrB,qBAAG1C,MAASqC,OAAsBC,aAC7C,qBAAGtC,MAASqC,OAAsBE,SAKpC6B,GAAgBtE,YAAOkE,IAAQpC,OAC1C,kBAAwB,CACtBG,KADF,EAAGA,KAEDmC,QAFF,EAASA,WADkBpE,CAAH,oJAMf,qBACPE,MACEqC,OAAUK,SAKQ,qBAClB1C,MACEqC,OAAUC,aAGL,qBACPtC,MACEqC,OAAUE,QAKdhC,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAGpDuD,GAAkBvE,YAAOkE,IAAQpC,OAC5C,kBAAwB,CACtBG,KADF,EAAGA,KAEDmC,QAFF,EAASA,WADoBpE,CAAH,uOAexBS,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,MAGpDwD,GAAUxE,YAAOQ,EAAPR,CAAH,2LAWPyE,GAAYzE,YAAOQ,EAAPR,CAAH,gPAGA,qBAClBE,MACEqC,OAAUE,QAWZhC,YAAQC,IAAYC,IAAOC,IAAOC,IAAQC,IAAUC,IAASC,M,SC1bpD0D,GAAY,oCCAZC,GACN,qBADMA,GAEH,cAFGA,GAIJ,iBAGIC,GAET,oZ,qBCJSC,GAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAClBC,KAAMC,KAHG,4DAGYH,GADH,2CAAH,sD,wECoCRI,GA1B4B,SAAC,GAMrC,IALLnD,EAKI,EALJA,KACAO,EAII,EAJJA,QAII,IAHJ6C,iBAGI,aAFJnD,gBAEI,SADDoD,EACC,mBACEC,EACJ,gBAAC1D,EAAD,WACE,eAACC,EAAD,2BACEG,KAAMA,EACNO,QAASA,GACL8C,GAHN,IAIEpD,SAAUA,KAEZ,eAACK,EAAD,CAAgBC,QAASA,EAASN,SAAUA,EAA5C,SACE,eAACG,EAAD,CAAMmD,QAAQ,YAAd,SACE,2BAAUC,OAAO,0BAMzB,OAAOJ,EAAY,iCAAQE,IAAmB,qCAAGA,KCjBpC/B,GAbqB,SAAC,GAAwB,IAAtBvB,EAAqB,EAArBA,KAAMyD,EAAe,EAAfA,SAC3C,EAA4BC,cAApBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAEjB,OACE,gBAACnF,EAAD,CAAKoF,MAAO,EAAG9E,SAAS,WAAxB,UACG0E,EACAK,YAAMH,EAAS3D,IAAS8D,YAAMF,EAAQ5D,IACrC,eAACsB,GAAD,UAAawC,YAAMF,EAAQ5D,SCMpB+D,GAd8B,SAAC,GAA8B,IAA5BN,EAA2B,EAA3BA,SAAUO,EAAiB,EAAjBA,WACxD,OAAOA,EACL,gBAAC5C,GAAD,CAAe6C,GAAI,EAAGC,GAAI,EAA1B,UACE,eAACpD,EAAD,UAAOkD,IACNP,KAGH,gBAAC1C,EAAD,CAAOkD,GAAI,EAAGC,GAAI,EAAlB,UACE,eAACpD,EAAD,UAAOkD,IACNP,MCuCQU,GAvC6B,SAAC,GAOtC,IANLnD,EAMI,EANJA,MACAoD,EAKI,EALJA,gBACApE,EAII,EAJJA,KACAE,EAGI,EAHJA,KACAuD,EAEI,EAFJA,SAEI,IADJY,gBACI,SACJ,EAA4BX,cAApBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAEjB,OACE,gBAACnF,EAAD,CAAK6F,QAAQ,OAAOC,cAAc,SAASC,WAAW,aAAtD,UACE,gBAAC/F,EAAD,CAAK6F,QAAQ,OAAOE,WAAW,SAASzF,SAAS,WAAjD,UACE,eAAC,GAAD,CAAgBiF,WAAYI,EAA5B,SAA8CpD,IAC7CqD,GACC,eAAClD,GAAD,UACE,sBAAK0C,MAAM,IAAIY,OAAO,IAAIC,KAAK,eAAenB,QAAQ,YAAtD,SACE,uBAAMoB,EAAE,8NAKflB,GAGC,eAAC,GAAD,CAAgBzD,KAAMA,EAAtB,SACE,eAAC,GAAD,CACEA,KAAMA,EACNE,KAAMA,EACNuB,UACEqC,YAAMH,EAAS3D,IAAS8D,YAAMF,EAAQ5D,GAAQ,UAAY,W,oDCSzD4E,GA/BqC,SAAC,GAG9C,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,cAAeC,EAEnB,EAFmBA,WAEnB,IADJC,MAAS9C,EACL,EADKA,MAAOlC,EACZ,EADYA,KAEhB,EAA4B0D,cAApBE,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,QAEhB,OACE,gBAAClF,EAAD,CAAKM,SAAS,WAAW8E,MAAO,EAAhC,UACE,eAAC,KAAD,CACEoB,SAAU/C,EACVlC,KAAMA,EACN+B,SAAU,SAACmD,GAAD,OAASJ,EAAc9E,EAAMkF,IACvClD,OAAQ+C,EACRI,WAAW,aACXC,YACE,eAAC,KAAD,CACElF,KAAK,OACLmF,UAAQ,EACRvD,KAAM,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,QAG/DwD,OAAQC,KACR9D,UAAWqC,YAAMH,EAAS3D,IAAS8D,YAAMF,EAAQ5D,GAAQ,UAAY,KAEtE8D,YAAMH,EAAS3D,IAAS8D,YAAMF,EAAQ5D,IACrC,eAACsB,GAAD,UAAawC,YAAMF,EAAQ5D,SCPpB4B,GAjCsB,SAAC,GAS/B,IARLzB,EAQI,EARJA,GACAH,EAOI,EAPJA,KACA8B,EAMI,EANJA,KACAI,EAKI,EALJA,MAEAH,GAGI,EAJJE,eAII,EAHJF,UACAC,EAEI,EAFJA,OAGA,GADI,EADJP,UAE4BiC,eAApBE,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,QAEhB,OACE,gBAAClF,EAAD,CAAKM,SAAS,WAAW8E,MAAO,EAAhC,UACE,eAAC,GAAD,CACE1D,GAAIA,EACJH,KAAMA,EACN8B,KAAMA,EACNI,MAAOA,EACPD,gBAAc,EACdF,SAAUA,EACVC,OAAQA,EACRP,UACEqC,YAAMH,EAAS3D,IAAU8D,YAAMF,EAAQ5D,GAAS,UAAY,KAG/D8D,YAAMH,EAAS3D,IAAU8D,YAAMF,EAAQ5D,IACtC,eAACsB,GAAD,UAAawC,YAAMF,EAAQ5D,S,UC+jBpBwF,GAllB6B,SAAC,GAAY,IAAVrF,EAAS,EAATA,GAG7C,EACEuD,cADMoB,EAAR,EAAQA,cAAe/B,EAAvB,EAAuBA,OAAQY,EAA/B,EAA+BA,QAAS8B,EAAxC,EAAwCA,aAAcV,EAAtD,EAAsDA,WAAYnB,EAAlE,EAAkEA,OAG5D8B,EAAY,SAAC1F,GACjB,SAAU8D,YAAMH,EAAS3D,KAAS8D,YAAMF,EAAQ5D,KAG5C2F,EAAU,SAAC3F,GACf,OAAK8D,YAAMH,EAAS3D,MAIX8D,YAAMF,EAAQ5D,IAqBzB,OACE,uCACE,eAACN,EAAD,CAAUuE,GAAI,EAAd,SACE,eAAC,GAAD,CAAgBjE,KAAK,MAArB,SACE,mCACE,eAAC,GAAD,CACEO,QAASuD,YAAMf,EAAD,qBAAuB5C,EAAvB,UACd4B,SAAU,kBACR+C,EAAc,cAAD,OAAe3E,EAAf,UAA2B4C,EAAO6C,MAEjD5F,KAAI,qBAAgBG,EAAhB,SACJiD,WAAW,IAEb,eAAClE,EAAD,CAAM2G,GAAI,EAAGC,WAAW,OAAxB,sJAMN,eAACpG,EAAD,CACE4E,QAAQ,OACRyB,cAAe,EACfC,oBAAqB,CACnB1H,GAAI,uCACJC,GAAI,iBACJC,GAAI,kBAENyF,GAAI,EARN,SAUE,eAAC,GAAD,CACEG,gBAAgB,wZAChBpD,MAAM,yKACNhB,KAAI,qBAAgBG,EAAhB,WACJD,KAAK,OAJP,SAME,eAAC,GAAD,CACEC,GAAE,qBAAgBA,EAAhB,WACFH,KAAI,qBAAgBG,EAAhB,WACJ2B,KAAMc,GACNV,MAAO4B,YAAMf,EAAD,qBAAuB5C,EAAvB,YACZ8B,gBAAc,EACdF,SAAU0D,EACVzD,OAAQ+C,QAId,gBAACrF,EAAD,CACE4E,QAAQ,OACRyB,cAAe,EACfE,WAAY,EACZD,oBAAoB,uCACpB/B,GAAI,EALN,UAOE,eAAC,GAAD,CACEjE,KAAI,qBAAgBG,EAAhB,aACJa,MAAM,6CACNd,KAAK,OACLmE,UAAQ,IAEV,eAAC,GAAD,CACErE,KAAI,qBAAgBG,EAAhB,UACJa,MAAM,qBACNd,KAAK,OACLmE,UAAQ,IAEV,eAAC,GAAD,CACErE,KAAI,qBAAgBG,EAAhB,iBACJa,MAAM,sLACNd,KAAK,OACLkE,gBAAgB,keAChBC,UAAQ,IAEV,eAAC,GAAD,CACErE,KAAI,qBAAgBG,EAAhB,SACJa,MAAM,qBACNd,KAAK,OACLmE,UAAQ,EAJV,SAME,eAAC,GAAD,CAAgBrE,KAAI,qBAAgBG,EAAhB,SAApB,SACE,gBAAC,GAAD,CACEuB,UAAU,SACVvB,GAAE,qBAAgBA,EAAhB,SACFH,KAAI,qBAAgBG,EAAhB,SACJsB,UAAWiE,EAAU,cAAD,OAAevF,EAAf,UAA4B,UAAY,GAJ9D,UAME,yBAAQ+B,MAAM,GAAd,qEACA,yBAAQA,MAAM,IAAd,wDACA,yBAAQA,MAAM,IAAd,+DAIN,eAAC,GAAD,CACElC,KAAI,qBAAgBG,EAAhB,UACJa,MAAM,4EACNd,KAAK,OACLmE,UAAQ,EAJV,SAME,eAAC,GAAD,CACE3C,UAAWkD,GACXzE,GAAE,qBAAgBA,EAAhB,UACFH,KAAI,qBAAgBG,EAAhB,UACJ+B,MAAOa,EAAOmD,KACdzE,UAAWiE,EAAU,cAAD,OAAevF,EAAf,WAA6B,UAAY,OAGjE,eAAC,GAAD,CACEH,KAAI,qBAAgBG,EAAhB,iBACJa,MAAM,qEACNd,KAAK,OACLmE,UAAQ,EAJV,SAME,eAAC,GAAD,CAAgBrE,KAAI,qBAAgBG,EAAhB,iBAApB,SACE,gBAAC,GAAD,CACEuB,UAAU,SACVvB,GAAE,qBAAgBA,EAAhB,iBACFH,KAAI,qBAAgBG,EAAhB,iBACJsB,UACEiE,EAAU,cAAD,OAAevF,EAAf,kBAAoC,UAAY,GAL7D,UAQE,yBAAQ+B,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,gFACA,yBAAQA,MAAM,KAAd,wFACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,qHACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,0GACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,8FACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,6JACA,yBAAQA,MAAM,KAAd,4HACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,0OAGA,yBAAQA,MAAM,KAAd,+GACA,yBAAQA,MAAM,KAAd,iFACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kGACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,qLACA,yBAAQA,MAAM,KAAd,mHACA,yBAAQA,MAAM,KAAd,gIACA,yBAAQA,MAAM,KAAd,mGACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,iFACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,6EACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,yJACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,mGACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,qEACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,wFACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,2GACA,yBAAQA,MAAM,KAAd,yFACA,yBAAQA,MAAM,KAAd,qEACA,yBAAQA,MAAM,KAAd,2EACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,gFACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,iEACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,qHACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,mFACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,6FACA,yBAAQA,MAAM,KAAd,mGACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,oDACA,yBAAQA,MAAM,KAAd,8CACA,yBAAQA,MAAM,KAAd,sEACA,yBAAQA,MAAM,KAAd,kFACA,yBAAQA,MAAM,KAAd,wEACA,yBAAQA,MAAM,KAAd,4EACA,yBAAQA,MAAM,KAAd,4GACA,yBAAQA,MAAM,KAAd,8HACA,yBAAQA,MAAM,KAAd,gCACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,6FACA,yBAAQA,MAAM,KAAd,iFACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,mJACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,uHACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,2EACA,yBAAQA,MAAM,KAAd,yGACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,qEACA,yBAAQA,MAAM,KAAd,iHACA,yBAAQA,MAAM,KAAd,+GACA,yBAAQA,MAAM,KAAd,qHACA,yBAAQA,MAAM,KAAd,+IACA,yBAAQA,MAAM,KAAd,2HACA,yBAAQA,MAAM,KAAd,uFACA,yBAAQA,MAAM,KAAd,qEACA,yBAAQA,MAAM,KAAd,2GACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,+IACA,yBAAQA,MAAM,KAAd,qGACA,yBAAQA,MAAM,KAAd,qEACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,2EACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,+GACA,yBAAQA,MAAM,KAAd,qHACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,iFACA,yBAAQA,MAAM,KAAd,gFACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,0GACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,sFACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8FACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,wFACA,yBAAQA,MAAM,KAAd,kLACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,0GACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,qHACA,yBAAQA,MAAM,KAAd,uIACA,yBAAQA,MAAM,KAAd,4KACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,0MACA,yBAAQA,MAAM,KAAd,gCACA,yBAAQA,MAAM,KAAd,0EACA,yBAAQA,MAAM,KAAd,4CACA,yBAAQA,MAAM,KAAd,sCACA,yBAAQA,MAAM,KAAd,oEACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,6HACA,yBAAQA,MAAM,KAAd,+DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,uIACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8DACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,wDACA,yBAAQA,MAAM,KAAd,8MACA,yBAAQA,MAAM,KAAd,sKACA,yBAAQA,MAAM,KAAd,2EACA,yBAAQA,MAAM,KAAd,kDACA,yBAAQA,MAAM,KAAd,yDAIN,eAAC,GAAD,CACElC,KAAI,qBAAgBG,EAAhB,aACJa,MAAM,4EACNqD,UAAQ,EACRD,gBACE,uCACE,4MACA,gCACE,gCACE,mDADF,gEAGA,gCACE,mDADF,2GAGA,gCACE,mDADF,sHAGA,gCACE,mDADF,4HAGA,gCACE,mDADF,6KAGA,gCACE,mDADF,+IAGA,gCACE,mDADF,0XAIA,gCACE,mDADF,qGAGA,gCACE,mDADF,wNAMNlE,KAAK,OAvCP,SAyCE,eAAC,GAAD,CAAgBF,KAAI,qBAAgBG,EAAhB,aAApB,SACE,gBAAC,GAAD,CACEuB,UAAU,SACVvB,GAAE,qBAAgBA,EAAhB,aACFH,KAAI,qBAAgBG,EAAhB,aACJsB,UACEiE,EAAU,cAAD,OAAevF,EAAf,cAAgC,UAAY,GALzD,UAQE,yBAAQ+B,MAAM,IAAd,qEACA,yBAAQA,MAAM,IAAd,qEACA,yBAAQA,MAAM,IAAd,gHACA,yBAAQA,MAAM,IAAd,2HACA,yBAAQA,MAAM,IAAd,iIACA,yBAAQA,MAAM,IAAd,kLACA,yBAAQA,MAAM,IAAd,oJACA,yBAAQA,MAAM,IAAd,+XAIA,yBAAQA,MAAM,KAAd,iHAIN,eAAC,GAAD,CACElC,KAAI,qBAAgBG,EAAhB,YACJa,MAAM,wFACNqD,UAAQ,EACRD,gBACE,uCACE,6BACE,sVAIF,8BACE,4aAEkB,SAGpB,mvCAQJlE,KAAK,OAzBP,SA2BE,eAAC,GAAD,CACEC,GAAE,qBAAgBA,EAAhB,YACFH,KAAI,qBAAgBG,EAAhB,YACJ2B,KAAMc,GACNV,MAAO4B,YAAMf,EAAD,qBAAuB5C,EAAvB,aACZ8B,gBAAc,EACdF,SAAU0D,EACVzD,OAAQ+C,MAGZ,eAAC,GAAD,CACE/E,KAAI,qBAAgBG,EAAhB,WACJa,MAAM,iCACNd,KAAK,OACLmE,UAAQ,EAJV,SAME,eAAC,GAAD,CAAgBrE,KAAI,qBAAgBG,EAAhB,WAApB,SACE,gBAAC,GAAD,CACEuB,UAAU,SACVvB,GAAE,qBAAgBA,EAAhB,WACFH,KAAI,qBAAgBG,EAAhB,WACJsB,UAAWiE,EAAU,cAAD,OAAevF,EAAf,YAA8B,UAAY,GAC9DF,SA1fY,WACtB,UCpCoBkG,EDoCRxC,ICpC2D,IAA5ByC,OAAOC,KAAKF,GAAKG,UDyC1DX,EAAQ,cAAD,OAAexF,EAAf,YACPwF,EAAQ,cAAD,OAAexF,EAAf,eACPwF,EAAQ,cAAD,OAAexF,EAAf,mBACPwF,EAAQ,cAAD,OAAexF,EAAf,WACPwF,EAAQ,cAAD,OAAexF,EAAf,YC7CU,IAACgG,ED6hBAI,GALZ,UAOE,yBAAQrE,MAAM,GAAd,qEA9eI,kBACd4B,YAAMf,EAAD,qBAAuB5C,EAAvB,aEhDoBqG,EFiDZ1C,YAAMf,EAAD,qBAAuB5C,EAAvB,WEhDRsG,aAAkB,IAAIC,KAAQF,IFejB,IEhBC,IAACA,EF8hBdG,IAAa,yBAAQzE,MAAM,IAAd,wDACd,yBAAQA,MAAM,IAAd,4DAKR,eAACxC,EAAD,CAAUuE,GAAI,EAAd,SACE,eAAC,GAAD,CAAgBjE,KAAI,qBAAgBG,EAAhB,eAApB,SACE,mCACE,eAAC,GAAD,CACEI,QAASuD,YAAMf,EAAD,qBAAuB5C,EAAvB,gBACd4B,SAAU,kBACR+C,EAAc,cAAD,OAAe3E,EAAf,gBAAiC4C,EAAO6D,YAEvD5G,KAAI,qBAAgBG,EAAhB,eACJiD,WAAW,EACXnD,UAAU,IAEZ,eAACf,EAAD,CAAM2G,GAAI,EAAGC,WAAW,OAAxB,uhBAON,eAACxG,EAAD,s1BAKA,gBAACI,EAAD,CACE4E,QAAQ,OACRyB,cAAe,EACfE,WAAY,EACZD,oBAAqB,CACnB1H,GAAI,uCACJE,GAAI,kBAENyF,GAAI,EARN,UAUE,eAAC,GAAD,CACEjE,KAAI,qBAAgBG,EAAhB,SACJa,MAAM,6CACNd,KAAK,OACLmE,UAAQ,EAJV,SAME,eAAC,GAAD,CACElE,GAAE,qBAAgBA,EAAhB,SACFH,KAAI,qBAAgBG,EAAhB,SACJ2B,KAAMc,GACNV,MAAO4B,YAAMf,EAAD,qBAAuB5C,EAAvB,UACZ8B,gBAAc,EACdF,SAAU0D,EACVzD,OAAQ+C,MAGZ,eAAC,GAAD,CACE/E,KAAI,qBAAgBG,EAAhB,WACJa,MAAM,QACNd,KAAK,OACLmE,UAAQ,W,8BGtkBHwC,GAdmB,SAAC,GAAiC,IAAD,IAA9BC,aAA8B,SAAfrD,EAAe,EAAfA,SAClD,OACE,qCACGqD,EACC,eAACrI,EAAD,CAAK6F,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,SACE,eAAC,KAAD,CAAYuC,QAASD,EAAOE,KAAM,QAGpCvD,KC+DOf,GA/D6B,SAAC,GAKtC,IAJLe,EAII,EAJJA,SACAwD,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEA,EAAgCC,oBAAS,GAAzC,oBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,mBAAyB,MAA1D,oBAAOG,EAAP,KAAkBC,EAAlB,KACQC,EAAc/D,cAAd+D,UAkBR,OAhBAC,qBAAU,WACR,sBAAC,sBAAA1E,EAAA,6DACCsE,GAAW,GADZ,kBAKqBJ,IALrB,cAMGM,GAAY,GANf,gDAQGA,GAAY,GARf,yBAUGF,GAAW,GAVd,2EAAD,KAaC,IAGD,gBAAC,GAAD,WACE,eAACnF,GAAD,CACEwF,UAAU,WACVlG,UAAU,eACVY,QAAS,WACP4E,IACAQ,KALJ,SAQE,sBAAKhG,UAAU,QAAQoC,MAAM,KAAKY,OAAO,KAAKlB,QAAQ,cAAtD,SACE,uBACEmB,KAAK,eACLC,EAAE,waAIR,eAAC,GAAD,CAAMmC,MAAOO,EAAb,SACE,eAAC5I,EAAD,CACE6F,QAAQ,OACRsD,eAAe,SACf,cAAY,SACZnD,OAAO,OAJT,SAMG8C,EACC9D,EAEA,eAACvE,EAAD,CAAMoF,QAAQ,OAAOE,WAAW,SAASqD,SAAS,OAAlD,SACGV,YC7DAW,GAJuB,SAAC,GAAkB,IAAhBrE,EAAe,EAAfA,SACvC,OAAO,eAAChB,GAAD,UAAmBgB,KCmPbjE,GA5MmB,WAChC,IAAMuI,EAAuC,CAC3CC,QAAS,GACThI,KAAM,GACNiI,YAAa,GACbC,MAAO,GACPC,IAAK,EACLjC,KAAM,KACNkC,YAAa,KACbC,QAAS,EACTC,OAAQ,GACRC,MAAO,KACP3C,KAAK,EACLgB,WAAW,EACX4B,IAAK,GACLC,MAAO,IAGHC,EAAmB,CACvBC,WAAY,CAACZ,IAGTa,EAASC,OAAaC,MAAM,CAChCH,WAAYE,OAAYE,GACtBF,OAAaC,MAAM,CACjBd,QAASa,OAENG,QAAQnG,GAAoB,kHAC5BwB,SAAS,qGACZrE,KAAM6I,OAEHG,QAAQnG,GAAoB,kHAC5BwB,SAAS,qGACZ4D,YAAaY,OAEVG,QAAQnG,GAAoB,kHAC5BwB,SAAS,qGACZ6D,MAAOW,OAEJvC,OAAO,GAAI,uJACXjC,SAAS,qGACZ8D,IAAKU,OAAaxE,SAAS,qGAC3B6B,KAAM2C,OAEHI,UAAU,oFACV5E,SAAS,qGACZ+D,YAAaS,OAAaxE,SAAS,qGACnCgE,QAASQ,OAENK,SAAS,EAAG,iJACZ7E,SAAS,qGACZiE,OAAQO,OAAaxE,SAAS,qGAC9BkE,MAAOM,OAEJI,UAAU,oFACV5E,SAAS,qGACZuC,UAAWiC,OAAcxE,SAAS,qGAClCmE,IAAKK,OAEFG,QAAQrG,GAAW,4LACnB0B,SAAS,wHACZoE,MAAOI,OAEJJ,MAAM,yFACNpE,SAAS,0GAKZ8E,EAAmB,uCAAG,WAAOpG,GAAP,eAAAC,EAAA,+EAENF,GAAWC,GAFL,cAElBqG,EAFkB,yBAGjBA,GAHiB,oGAAH,sDASzB,OACE,uCACE,eAAChK,EAAD,CAASiK,QAAM,EAAf,iFAEA,eAAC,IAAD,CACEC,cAAeZ,EACfa,iBAAkBX,EAClBY,SAAU,kBAAMC,QAAQC,KAAI,IAH9B,SAKG,gBACC3G,EADD,EACCA,OACA4G,EAFD,EAECA,MACAhE,EAHD,EAGCA,QACAiE,EAJD,EAICA,cACAC,EALD,EAKCA,aACApC,EAND,EAMCA,UAND,OAQC,gBAAC,EAAD,CAAenD,QAAQ,OAAOC,cAAc,SAA5C,UACE,eAAC,IAAD,CACEvE,KAAK,aACL2B,OAAQ,SAACmI,GAAD,OACN,uCACG/G,EAAO4F,WAAWoB,KAAI,SAACC,EAAIC,GAAL,OACrB,uCACE,gBAACxL,EAAD,CACE6F,QAAQ,OACRsD,eAAe,gBACfrD,cAAe,CAAEjG,GAAG,SAAWC,GAAG,OAHpC,UAKE,gBAACa,EAAD,CACE8K,GAAG,KACHtL,MAAM,YACNiJ,SAAS,MACTsC,OAAO,SAJT,oEAMaF,EAAM,EANnB,0GAQA,gBAAC9H,GAAD,CACEjC,KAAK,SACLtB,MAAM,YACNwL,GAAG,cACHrL,SAAS,WACTkB,SAAU8C,EAAO4F,WAAWrC,OAAS,EACrCjE,QAAS,kBAAMyH,EAAQO,OAAOJ,IANhC,UAQE,eAAC/K,EAAD,CAAMH,SAAS,WAAWuL,IAAI,OAAOC,KAAK,QAA1C,SACE,sBACE1G,MAAM,KACNY,OAAO,KACPlB,QAAQ,YACRmB,KAAK,eAJP,SAME,uBAAMC,EAAE,wBAGZ,eAACzF,EAAD,CAAM2I,SAAS,OAAf,qHAGJ,eAAC,GAAD,CAAW1H,GAAI8J,UAGnB,gBAACxL,EAAD,CACE6F,QAAQ,OACRkG,GAAI,EACJjG,cAAe,CAAEjG,GAAG,SAAWC,GAAG,OAHpC,UAKE,eAACiE,GAAD,CACEtC,KAAK,SACL+D,GAAI,CAAE3F,GAAI,EAAGC,GAAI,GACjBkM,GAAI,CAAElM,GAAI,GACV8D,QAAS,WACPoH,QAAQC,IAAII,GACZA,EAAQY,KAAK3C,IANjB,qHAWA,eAACvF,GAAD,CACEtC,KAAK,SACL+D,GAAI,CAAE3F,GAAI,EAAGC,GAAI,GACjBkM,GAAI,CAAElM,GAAI,QACV8D,QAAS,WACPoF,KALJ,6FAUA,eAAClF,GAAD,CACErC,KAAK,SACLX,EAAG,EACHU,UAAW0J,GAASE,IAAiBlE,EACrCtD,QAAS,kBAAMuH,GAAc,IAC7B3F,GAAI,CAAE3F,GAAI,EAAGC,GAAI,GACjBoJ,UAAW,CAAEpJ,GAAI,YANnB,gJAcPsL,GACC,eAAC,GAAD,UACE,eAAC,GAAD,CACE3C,QAAO,sBAAE,sBAAAlE,EAAA,+EAAYmG,EAAoBpG,IAAhC,2CACTkE,aAAc,kBAAM2C,GAAc,IAClCzC,aAAa,gJAHf,SAKE,eAACjI,EAAD,CACEoF,QAAQ,OACRE,WAAW,SACXmG,UAAW,CAAErM,GAAI,SAAUC,GAAI,QAC/BsJ,SAAU,CAAEvJ,GAAI,OAAQC,GAAI,QAJ9B,mKCpOZqM,GAAmB,SAACC,GAAD,gBAAyBA,EAAzB,OAEnBC,GAAiB,CACrBC,GAAIH,GAAiB,MACrBpM,GAAIoM,GAAiB,KACrBrM,GAAIqM,GAAiB,KACrBtM,GAAIsM,GAAiB,MAGnBI,GAA2B,CAC7BF,GAAexM,GACfwM,GAAevM,GACfuM,GAAetM,GACfsM,GAAeC,IAaJ5M,GAAsB,CACjCE,YAAayM,GACbE,YAZFA,GAAW,6BACNA,IACA,CACD1M,GAAI0M,GAAY,GAChBzM,GAAIyM,GAAY,GAChBxM,GAAIwM,GAAY,GAChBD,GAAIC,GAAY,KAOlBC,UAAW,CACT3M,GAAI,OACJC,GAAI,OACJwM,GAAI,QAGN9J,YAAa,CACXiK,QAAS,IACTC,OAAQ,IACRjK,KAAM,KAGRkK,YAAa,CACX9M,GAAI,EACJC,GAAI,KACJwM,GAAI,KAGNnK,MAAO,CACLtC,GAAI,MACJC,GAAI,MACJwM,GAAI,OAGN3M,GAAI,SAACiN,GAAD,wCAA2CA,EAA3C,gBACJ/I,KAAM,SAAC+I,GAAD,mCAAsCA,EAAtC,MAEN7K,OAAQ,CACNK,MAAO,OACPH,MAAO,OACP4K,QAAS,OACT7K,UAAW,UACXE,SAAU,OACV4K,KAAM,Y,OC9CKC,OAZf,WACE,OACE,sBAAK/J,UAAU,MAAf,SACE,eAAC,IAAD,CAAetD,MAAOA,GAAtB,SACE,eAACH,EAAD,UACE,eAAC,GAAD,W,UCVGyN,GAAQC,aAAe,CAClCC,QAAS,K,UCSSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAAStK,OACP,eAAC,IAAMuK,WAAP,UACE,eAAC,KAAD,CAAUT,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJU,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.95efe438.chunk.js","sourcesContent":["import { Field, FieldProps, Form as FormComponent } from \"formik\";\nimport styled from \"styled-components\";\nimport {\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  space,\n  SpaceProps,\n  color,\n  ColorProps,\n  typography,\n  TypographyProps,\n  compose,\n  flexbox,\n  FlexboxProps,\n  grid,\n  GridProps,\n} from \"styled-system\";\nimport MaskedInputComponent, {\n  Props as MaskInputProps,\n} from \"react-input-mask\";\n\n// #TODO: избавить от магических чисел\n\nenum VARIANT {\n  PRIMARY,\n  SECONDARY,\n}\n\ninterface IProps\n  extends PositionProps,\n    LayoutProps,\n    SpaceProps,\n    ColorProps,\n    TypographyProps,\n    FlexboxProps,\n    GridProps {\n  variant?: VARIANT;\n  children: React.ReactNode;\n}\n// Default tags\n\nexport const Wrapper = styled.div<IProps>`\n  margin: 0 auto;\n\n  ${({ theme: { up, breakPoints } }) => `\n    ${up(breakPoints.sm)}{\n      width:  ${breakPoints.sm};\n    }\n\n    ${up(breakPoints.md)}{\n      width: ${breakPoints.md}\n    }\n\n    ${up(breakPoints.lg)}{\n      width: ${breakPoints.lg}\n    }\n  `}\n`;\n\nexport const Div = styled.div<IProps>`\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const List = styled.div<IProps>`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const Span = styled.span<IProps>`\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const Heading = styled.h1<IProps>`\n  margin: 0;\n  ${compose(typography, color, space, layout)}\n`;\n\nexport const P = styled.p`\n  padding: 0;\n  margin-bottom: 16px;\n`;\n\n// Form\n\nexport const Form = styled(FormComponent)<IProps>`\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const Fieldset = styled.fieldset<IProps>`\n  border: 0;\n  padding: 0;\n  margin: 0;\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\ninterface ICheckboxProps {\n  name: string;\n  disabled?: boolean;\n}\n\nconst hiidenStyles = `border: 0;\nclip: rect(0 0 0 0);\nheight: 1px;\nmargin: -1px;\noverflow: hidden;\npadding: 0;\nposition: absolute;\nwhite-space: nowrap;\nwidth: 1px;`;\n\nexport const HiddenCheckbox = styled(Field).attrs<ICheckboxProps>(\n  ({ name, disabled = false }) => ({\n    type: \"checkbox\",\n    name,\n    id: name,\n    disabled,\n  })\n)<ICheckboxProps>`\n  ${hiidenStyles}\n`;\n\nexport const Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\ninterface IStyledCeckboxProps {\n  checked: boolean;\n  disabled?: boolean;\n}\n\nexport const StyledCheckbox = styled.div<IStyledCeckboxProps>`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${({\n    checked,\n    disabled = false,\n    theme: {\n      colors: { secondary, white, inactive },\n    },\n  }) => (checked ? (disabled ? inactive : secondary) : white)};\n  border-radius: ${({ theme: { radii } }) => radii.md};\n  border: 1px solid\n    ${({\n      checked,\n      theme: {\n        colors: { black, white },\n      },\n    }) => (checked ? white : black)};\n  transition: all 150ms;\n\n  ${Icon} {\n    visibility: ${({ checked }) => (checked ? \"visible\" : \"hidden\")};\n  }\n`;\n\nexport const Hint = styled.span`\n  display: none;\n  width: 300px;\n  height: auto;\n  position: absolute;\n  bottom: 20px;\n  color: #000;\n  border: 1px solid #444;\n  padding: 6px 10px 4px;\n  line-height: 1.4;\n  font-weight: normal;\n  font-size: 12px;\n  background-color: #fff;\n  border-radius: 4px;\n  z-index: 10;\n  left: 0;\n  box-shadow: 2px 2px 5px #555;\n`;\n\nexport const Label = styled.label<IProps>`\n  font-weight: ${({\n    theme: {\n      fontWeights: { bold },\n    },\n  }) => bold};\n  ${space};\n`;\n\nexport const LabelStar = styled.span`\n  position: absolute;\n  right: -16px;\n  top: 1px;\n  color: #e21a1a;\n`;\n\nexport const LabelWithHint = styled(Label)<IProps>`\n  border-bottom: 1px dotted;\n  cursor: help;\n  position: relative;\n\n  &:hover {\n    ${Hint} {\n      display: block;\n    }\n  }\n`;\n\nconst inputStyles = `\ndisplay: block;\nwidth: 100%;\nmin-height: 34px;\nmax-height: 34px;\npadding: 6px 6px;\nfont-size: 14px;\nline-height: 1.42857143;\ncolor: #555;\nbackground-color: #fff;\nbackground-image: none;\nborder: 1px solid #ccc;\nborder-top-color: rgb(204, 204, 204);\nborder-right-color: rgb(204, 204, 204);\nborder-bottom-color: rgb(204, 204, 204);\nborder-left-color: rgb(204, 204, 204);\nborder-radius: 6px;\ntransition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n\n&.invalid {\n  background: #fff2f1;\n  outline: transparent;\n  border-color: #e21a1a;\n}`;\n\ninterface IInputProps {\n  type: string;\n  placeholder: string;\n  name: string;\n  className: string;\n  component?: string;\n  render?: (props: FieldProps) => React.ReactNode;\n  disabled?: boolean;\n}\n\nexport const InputError = styled.span`\n  color: #e21a1a;\n  height: auto;\n  min-height: 1em;\n  position: absolute;\n  bottom: -15px;\n  left: 0;\n`;\n\nexport const Input = styled(Field).attrs<IInputProps>(\n  ({\n    type = \"text\",\n    placeholder = \"\",\n    name,\n    className,\n    component = \"input\",\n    render,\n    disabled = false,\n  }) => ({\n    type,\n    placeholder,\n    name,\n    className,\n    component,\n    render,\n    disabled,\n  })\n)<ICheckboxProps>`\n  ${inputStyles}\n\n  &:disabled {\n    background-color: ${({\n      theme: {\n        colors: { inactive },\n      },\n    }) => inactive};\n    opacity: 0.4;\n  }\n`;\n\nexport const MaskedInput = styled(MaskedInputComponent).attrs<MaskInputProps>(\n  ({ id, name, mask, onChange, onBlur, className, alwaysShowMask, value }) => ({\n    id,\n    name,\n    mask,\n    onChange,\n    onBlur,\n    className,\n    alwaysShowMask,\n    value,\n  })\n)<MaskInputProps>`\n  ${inputStyles}\n`;\n\nexport const Button = styled.button.attrs<IProps>(({ type, onClick }) => ({\n  type,\n  onClick,\n}))<IProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 6px 12px;\n  padding-right: 12px;\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 1.42857143;\n  border-radius: 4px;\n  appearance: none;\n  border: none;\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n\n  &:disabled {\n    color: ${({\n      theme: {\n        colors: { inactive },\n      },\n    }) => inactive};\n  }\n\n  ${({ theme: { down, breakPoints, colors } }) => `\n    ${down(breakPoints.md)}{\n      background-color: ${colors.secondary};\n      margin-bottom: 15px;\n      color: ${colors.white};\n\n      svg {\n        display:none;\n      }\n\n      &:disabled{\n        background-color: ${colors.inactive};\n        color: ${colors.black};\n      }\n    }\n  `}\n\n  &.close-button {\n    svg {\n      display: block;\n    }\n\n    background-color: ${({ theme: { colors } }) => colors.inactive};\n    color: ${({ theme: { colors } }) => colors.black};\n    transition: all 0.3s ease-in-out;\n\n    &:hover {\n      background-color: ${({ theme: { colors } }) => colors.secondary};\n      color: ${({ theme: { colors } }) => colors.white};\n    }\n  }\n`;\n\nexport const PrimaryButton = styled(Button).attrs<IProps>(\n  ({ type, onClick }) => ({\n    type,\n    onClick,\n  })\n)<IProps>`\n  color: ${({\n    theme: {\n      colors: { black },\n    },\n  }) => black} !important;\n\n  &:not(:disabled) {\n    background-color: ${({\n      theme: {\n        colors: { secondary },\n      },\n    }) => secondary};\n    color: ${({\n      theme: {\n        colors: { white },\n      },\n    }) => white} !important;\n  }\n\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const SecondaryButton = styled(Button).attrs<IProps>(\n  ({ type, onClick }) => ({\n    type,\n    onClick,\n  })\n)`\n  color: #666 !important;\n  border: 1px solid #b3b3b3;\n  background: #fefefe;\n  background: linear-gradient(to bottom, #fefefe 0, #e9e9e9 100%);\n\n  &:hover {\n    background: #e9e9e9;\n  }\n\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n\nexport const Diadlog = styled(Div)<IProps>`\n  content: \"\";\n  position: fixed;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: 99;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const InfoPopup = styled(Div)<IProps>`\n  top: 20%;\n  left: 50%;\n  background-color: ${({\n    theme: {\n      colors: { white },\n    },\n  }) => white};\n  width: 60%;\n  height: 300px;\n  position: absolute;\n  transform: translate(-50%);\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  ${compose(typography, color, space, layout, position, flexbox, grid)}\n`;\n","export const telRegExp = /\\+7\\s\\(\\d{3}\\)\\s\\d{3}-\\d{2}-\\d{2}/;\nexport const telValidation = (str: string) =>\n  str.replace(telRegExp, \"\").length === 11;\n","export const inputMasksMap = {\n  tel: \"+7 (999) 999-99-99\",\n  docNum: \"9999 999999\",\n  date: \"99.99.9999\",\n  snils: \"999-999-999-99\",\n};\n\nexport const yupTest = {\n  rusLetters:\n    /^[аАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ]+$/,\n};\n\nexport const statusesCodesMap = {\n  OK: 200,\n  NOT_FOUND: 404,\n  SERVER_ERROR: 500,\n};\n","import axios from \"axios\";\nimport { FinalFormValues } from \"./../components/form\";\n\nconst FORM_URL = \"https://webhook.site/d62ab05a-df0c-4606-8fb9-d80b9946b8e9\";\n\nexport const submitForm = async (values: FinalFormValues) => {\n  await axios.post(FORM_URL, values);\n};\n","import {\n  CheckboxContainer,\n  HiddenCheckbox,\n  Icon,\n  StyledCheckbox,\n} from \"../styled-components\";\n\ninterface ICheckBoxProps {\n  name: string;\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  labelWrap?: boolean;\n  disabled?: boolean;\n}\n\nconst Checkbox: React.FC<ICheckBoxProps> = ({\n  name,\n  checked,\n  labelWrap = true,\n  disabled = false,\n  ...props\n}) => {\n  const content = (\n    <CheckboxContainer>\n      <HiddenCheckbox\n        name={name}\n        checked={checked}\n        {...props}\n        disabled={disabled}\n      />\n      <StyledCheckbox checked={checked} disabled={disabled}>\n        <Icon viewBox=\"0 0 24 24\">\n          <polyline points=\"20 6 9 17 4 12\" />\n        </Icon>\n      </StyledCheckbox>\n    </CheckboxContainer>\n  );\n\n  return labelWrap ? <label>{content}</label> : <>{content}</>;\n};\n\nexport default Checkbox;\n","import { getIn, useFormikContext } from \"formik\";\nimport React from \"react\";\nimport { Div, InputError } from \"../styled-components\";\n\ninterface InputProps {\n  name: string;\n}\n\nconst Input: React.FC<InputProps> = ({ name, children }) => {\n  const { touched, errors } = useFormikContext();\n\n  return (\n    <Div width={1} position=\"relative\">\n      {children}\n      {getIn(touched, name) && getIn(errors, name) && (\n        <InputError>{getIn(errors, name)}</InputError>\n      )}\n    </Div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Hint, LabelWithHint, Label } from \"../styled-components\";\n\ninterface LabelProps {\n  textOrNode?: string | React.ReactNode;\n}\n\nconst LabelComponent: React.FC<LabelProps> = ({ children, textOrNode }) => {\n  return textOrNode ? (\n    <LabelWithHint mb={1} pb={1}>\n      <Hint>{textOrNode}</Hint>\n      {children}\n    </LabelWithHint>\n  ) : (\n    <Label mb={1} pb={1}>\n      <Hint>{textOrNode}</Hint>\n      {children}\n    </Label>\n  );\n};\n\nexport default LabelComponent;\n","import { getIn, useFormikContext } from \"formik\";\nimport React from \"react\";\nimport { Div, Input, LabelStar } from \"../styled-components\";\nimport InputComponent from \"./Input\";\nimport LabelComponent from \"./label\";\n\ninterface FormfieldProps {\n  label: string;\n  labelTextOrNode?: string | React.ReactNode;\n  name: string;\n  type: string;\n  component?: React.ReactNode;\n  required?: boolean;\n  children?: React.ReactNode;\n}\n\nconst Formfield: React.FC<FormfieldProps> = ({\n  label,\n  labelTextOrNode,\n  name,\n  type,\n  children,\n  required = false,\n}) => {\n  const { touched, errors } = useFormikContext();\n\n  return (\n    <Div display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\n      <Div display=\"flex\" alignItems=\"center\" position=\"relative\">\n        <LabelComponent textOrNode={labelTextOrNode}>{label}</LabelComponent>\n        {required && (\n          <LabelStar>\n            <svg width=\"9\" height=\"9\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1z\" />\n            </svg>\n          </LabelStar>\n        )}\n      </Div>\n      {children ? (\n        children\n      ) : (\n        <InputComponent name={name}>\n          <Input\n            name={name}\n            type={type}\n            className={\n              getIn(touched, name) && getIn(errors, name) ? \"invalid\" : \"\"\n            }\n          />\n        </InputComponent>\n      )}\n    </Div>\n  );\n};\n\nexport default Formfield;\n","import React from \"react\";\nimport ru from \"date-fns/locale/ru\";\nimport ReactDatePicker from \"react-datepicker\";\nimport MaskedTextInput from \"react-text-mask\";\nimport { getIn, useFormikContext } from \"formik\";\nimport { Div, InputError } from \"../styled-components\";\n\ninterface DatePickerFieldProps {\n  form: {\n    setFieldValue: (\n      field: string,\n      value: any,\n      shouldValidate?: boolean | undefined\n    ) => void;\n    handleBlur: (e: React.FocusEvent<any, Element>) => void;\n  };\n  field: {\n    value: Date | null;\n    name: string;\n  };\n}\n\ntype DatePickerFieldType = (props: DatePickerFieldProps) => void;\n\nexport const DatePickerField: DatePickerFieldType = ({\n  form: { setFieldValue, handleBlur },\n  field: { value, name },\n}) => {\n  const { errors, touched } = useFormikContext();\n\n  return (\n    <Div position=\"relative\" width={1}>\n      <ReactDatePicker\n        selected={value}\n        name={name}\n        onChange={(val) => setFieldValue(name, val)}\n        onBlur={handleBlur}\n        dateFormat=\"dd.MM.yyyy\"\n        customInput={\n          <MaskedTextInput\n            type=\"text\"\n            showMask\n            mask={[/\\d/, /\\d/, \".\", /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, /\\d/]}\n          />\n        }\n        locale={ru}\n        className={getIn(touched, name) && getIn(errors, name) ? \"invalid\" : \"\"}\n      />\n      {getIn(touched, name) && getIn(errors, name) && (\n        <InputError>{getIn(errors, name)}</InputError>\n      )}\n    </Div>\n  );\n};\n\nexport default DatePickerField;\n","import { getIn, useFormikContext } from \"formik\";\nimport React from \"react\";\nimport { Props } from \"react-input-mask\";\nimport {\n  Div,\n  InputError,\n  MaskedInput as MaskedInputComponent,\n} from \"../styled-components\";\n\nconst MaskedInput: React.FC<Props> = ({\n  id,\n  name,\n  mask,\n  value,\n  alwaysShowMask,\n  onChange,\n  onBlur,\n  className,\n}) => {\n  const { errors, touched } = useFormikContext();\n\n  return (\n    <Div position=\"relative\" width={1}>\n      <MaskedInputComponent\n        id={id}\n        name={name}\n        mask={mask}\n        value={value}\n        alwaysShowMask\n        onChange={onChange}\n        onBlur={onBlur}\n        className={\n          getIn(touched, name!) && getIn(errors, name!) ? \"invalid\" : \"\"\n        }\n      />\n      {getIn(touched, name!) && getIn(errors, name!) && (\n        <InputError>{getIn(errors, name!)}</InputError>\n      )}\n    </Div>\n  );\n};\n\nexport default MaskedInput;\n","import React from \"react\";\nimport { getIn, useFormikContext } from \"formik\";\nimport { Fieldset, Input, P, Span } from \"../styled-components\";\nimport Checkbox from \"./checkbox\";\nimport InputComponent from \"./Input\";\nimport Formfield from \"./formField\";\nimport DatePickerField from \"./datepickerField\";\nimport { inputMasksMap } from \"../constants/constans\";\nimport MaskedInput from \"./maskedInput\";\nimport { FormInitialValues } from \"./form\";\nimport { calculateAge } from \"../utls/calculateAge\";\nimport { isEmpty } from \"../utls/isEmpty\";\n\ninterface PassangerProps {\n  id: number;\n}\n\nconst Passanger: React.FC<PassangerProps> = ({ id }) => {\n  const CHILDREN_AGE_MAX = 10;\n\n  const { setFieldValue, values, touched, handleChange, handleBlur, errors } =\n    useFormikContext<FormInitialValues>();\n\n  const isInvalid = (name: string) => {\n    return !!(getIn(touched, name) && getIn(errors, name));\n  };\n\n  const isValid = (name: string) => {\n    if (!getIn(touched, name)) {\n      return true;\n    }\n\n    return !!getIn(errors, name);\n  };\n\n  const isTarifDisabled = () => {\n    if (isEmpty(touched)) {\n      return true;\n    }\n\n    return (\n      isValid(`passangers[${id}].name`) ||\n      isValid(`passangers[${id}].surname`) ||\n      isValid(`passangers[${id}].fathersName`) ||\n      isValid(`passangers[${id}].sex`) ||\n      isValid(`passangers[${id}].date`)\n    );\n  };\n\n  const isChild = () =>\n    getIn(values, `passangers[${id}.date]`) &&\n    calculateAge(getIn(values, `passangers[${id}.date]`)) <= CHILDREN_AGE_MAX;\n\n  return (\n    <>\n      <Fieldset mb={3}>\n        <InputComponent name=\"fss\">\n          <label>\n            <Checkbox\n              checked={getIn(values, `passangers[${id}].fss`)}\n              onChange={() =>\n                setFieldValue(`passangers[${id}].fss`, !values.fss)\n              }\n              name={`passangers[${id}].fss`}\n              labelWrap={false}\n            />\n            <Span ml={2} fontWeight=\"bold\">\n              Оформление билета по ФСС\n            </Span>\n          </label>\n        </InputComponent>\n      </Fieldset>\n      <Fieldset\n        display=\"grid\"\n        gridColumnGap={4}\n        gridTemplateColumns={{\n          sm: \"repeat(auto-fit, minmax(285px, 1fr))\",\n          md: \"repeat(2, 1fr)\",\n          lg: \"repeat(3, 1fr)\",\n        }}\n        mb={3}\n      >\n        <Formfield\n          labelTextOrNode=\"Идентификационный номер инвалида, выданный в Центре содействия мобильности.\"\n          label=\"СНИЛС или номер регистрации ЦСМ\"\n          name={`passangers[${id}].snils`}\n          type=\"text\"\n        >\n          <MaskedInput\n            id={`passangers[${id}].snils`}\n            name={`passangers[${id}].snils`}\n            mask={inputMasksMap.snils}\n            value={getIn(values, `passangers[${id}].snils`)}\n            alwaysShowMask\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </Formfield>\n      </Fieldset>\n      <Fieldset\n        display=\"grid\"\n        gridColumnGap={4}\n        gridRowGap={4}\n        gridTemplateColumns=\"repeat(auto-fit, minmax(284px, 1fr))\"\n        mb={3}\n      >\n        <Formfield\n          name={`passangers[${id}].surname`}\n          label=\"Фамилия\"\n          type=\"text\"\n          required\n        ></Formfield>\n        <Formfield\n          name={`passangers[${id}].name`}\n          label=\"Имя\"\n          type=\"text\"\n          required\n        ></Formfield>\n        <Formfield\n          name={`passangers[${id}].fathersName`}\n          label=\"Отчество (обязательно при наличии)\"\n          type=\"text\"\n          labelTextOrNode=\"Если в документе удостоверяющем личность у Вас нет отчества, поставьте в поле дефис (символ ' - ').\"\n          required\n        ></Formfield>\n        <Formfield\n          name={`passangers[${id}].sex`}\n          label=\"Пол\"\n          type=\"text\"\n          required\n        >\n          <InputComponent name={`passangers[${id}].sex`}>\n            <Input\n              component=\"select\"\n              id={`passangers[${id}].sex`}\n              name={`passangers[${id}].sex`}\n              className={isInvalid(`passangers[${id}].sex`) ? \"invalid\" : \"\"}\n            >\n              <option value=\"\">не выбрано</option>\n              <option value=\"1\">Мужской</option>\n              <option value=\"2\">Женский</option>\n            </Input>\n          </InputComponent>\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].date`}\n          label=\"Дата рождения\"\n          type=\"text\"\n          required\n        >\n          <Input\n            component={DatePickerField}\n            id={`passangers[${id}].date`}\n            name={`passangers[${id}].date`}\n            value={values.date}\n            className={isInvalid(`passangers[${id}].date`) ? \"invalid\" : \"\"}\n          ></Input>\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].citezenship`}\n          label=\"Гражданство\"\n          type=\"text\"\n          required\n        >\n          <InputComponent name={`passangers[${id}].citezenship`}>\n            <Input\n              component=\"select\"\n              id={`passangers[${id}].citezenship`}\n              name={`passangers[${id}].citezenship`}\n              className={\n                isInvalid(`passangers[${id}].citezenship`) ? \"invalid\" : \"\"\n              }\n            >\n              <option value=\"AU\">Австралия</option>\n              <option value=\"AT\">Австрия</option>\n              <option value=\"AZ\">Азербайджан</option>\n              <option value=\"AX\">Аландские о-ва</option>\n              <option value=\"AL\">Албания</option>\n              <option value=\"DZ\">Алжир</option>\n              <option value=\"AS\">Американское Самоа</option>\n              <option value=\"AI\">Ангилья</option>\n              <option value=\"AO\">Ангола</option>\n              <option value=\"AD\">Андорра</option>\n              <option value=\"AQ\">Антарктида</option>\n              <option value=\"AG\">Антигуа и Барбуда</option>\n              <option value=\"AR\">Аргентина</option>\n              <option value=\"AM\">Армения</option>\n              <option value=\"AW\">Аруба</option>\n              <option value=\"AF\">Афганистан</option>\n              <option value=\"BS\">Багамы</option>\n              <option value=\"BD\">Бангладеш</option>\n              <option value=\"BB\">Барбадос</option>\n              <option value=\"BH\">Бахрейн</option>\n              <option value=\"BY\">Беларусь</option>\n              <option value=\"BZ\">Белиз</option>\n              <option value=\"BE\">Бельгия</option>\n              <option value=\"BJ\">Бенин</option>\n              <option value=\"BM\">Бермудские о-ва</option>\n              <option value=\"BG\">Болгария</option>\n              <option value=\"BO\">Боливия</option>\n              <option value=\"BQ\">Бонэйр, Синт-Эстатиус и Саба</option>\n              <option value=\"BA\">Босния и Герцеговина</option>\n              <option value=\"BW\">Ботсвана</option>\n              <option value=\"BR\">Бразилия</option>\n              <option value=\"IO\">\n                Британская территория в Индийском океане\n              </option>\n              <option value=\"BN\">Бруней-Даруссалам</option>\n              <option value=\"BF\">Буркина-Фасо</option>\n              <option value=\"BI\">Бурунди</option>\n              <option value=\"BT\">Бутан</option>\n              <option value=\"VU\">Вануату</option>\n              <option value=\"VA\">Ватикан</option>\n              <option value=\"GB\">Великобритания</option>\n              <option value=\"HU\">Венгрия</option>\n              <option value=\"VE\">Венесуэла</option>\n              <option value=\"VG\">Виргинские о-ва (Великобритания)</option>\n              <option value=\"VI\">Виргинские о-ва (США)</option>\n              <option value=\"UM\">Внешние малые о-ва (США)</option>\n              <option value=\"TL\">Восточный Тимор</option>\n              <option value=\"VN\">Вьетнам</option>\n              <option value=\"GA\">Габон</option>\n              <option value=\"HT\">Гаити</option>\n              <option value=\"GY\">Гайана</option>\n              <option value=\"GM\">Гамбия</option>\n              <option value=\"GH\">Гана</option>\n              <option value=\"GP\">Гваделупа</option>\n              <option value=\"GT\">Гватемала</option>\n              <option value=\"GN\">Гвинея</option>\n              <option value=\"GW\">Гвинея-Бисау</option>\n              <option value=\"DE\">Германия</option>\n              <option value=\"GG\">Гернси</option>\n              <option value=\"GI\">Гибралтар</option>\n              <option value=\"HN\">Гондурас</option>\n              <option value=\"HK\">Гонконг (САР)</option>\n              <option value=\"GD\">Гренада</option>\n              <option value=\"GL\">Гренландия</option>\n              <option value=\"GR\">Греция</option>\n              <option value=\"GE\">Грузия</option>\n              <option value=\"GU\">Гуам</option>\n              <option value=\"DK\">Дания</option>\n              <option value=\"JE\">Джерси</option>\n              <option value=\"DJ\">Джибути</option>\n              <option value=\"DM\">Доминика</option>\n              <option value=\"DO\">Доминиканская Республика</option>\n              <option value=\"EG\">Египет</option>\n              <option value=\"ZM\">Замбия</option>\n              <option value=\"EH\">Западная Сахара</option>\n              <option value=\"ZW\">Зимбабве</option>\n              <option value=\"IL\">Израиль</option>\n              <option value=\"IN\">Индия</option>\n              <option value=\"ID\">Индонезия</option>\n              <option value=\"JO\">Иордания</option>\n              <option value=\"IQ\">Ирак</option>\n              <option value=\"IR\">Иран</option>\n              <option value=\"IE\">Ирландия</option>\n              <option value=\"IS\">Исландия</option>\n              <option value=\"ES\">Испания</option>\n              <option value=\"IT\">Италия</option>\n              <option value=\"YE\">Йемен</option>\n              <option value=\"CV\">Кабо-Верде</option>\n              <option value=\"KZ\">Казахстан</option>\n              <option value=\"KH\">Камбоджа</option>\n              <option value=\"CM\">Камерун</option>\n              <option value=\"CA\">Канада</option>\n              <option value=\"QA\">Катар</option>\n              <option value=\"KE\">Кения</option>\n              <option value=\"CY\">Кипр</option>\n              <option value=\"KG\">Киргизия</option>\n              <option value=\"KI\">Кирибати</option>\n              <option value=\"CN\">Китай</option>\n              <option value=\"KP\">КНДР</option>\n              <option value=\"CC\">Кокосовые о-ва</option>\n              <option value=\"CO\">Колумбия</option>\n              <option value=\"KM\">Коморы</option>\n              <option value=\"CG\">Конго - Браззавиль</option>\n              <option value=\"CD\">Конго - Киншаса</option>\n              <option value=\"CR\">Коста-Рика</option>\n              <option value=\"CI\">Кот-д&rsquo;Ивуар</option>\n              <option value=\"CU\">Куба</option>\n              <option value=\"KW\">Кувейт</option>\n              <option value=\"CW\">Кюрасао</option>\n              <option value=\"LA\">Лаос</option>\n              <option value=\"LV\">Латвия</option>\n              <option value=\"LS\">Лесото</option>\n              <option value=\"LR\">Либерия</option>\n              <option value=\"LB\">Ливан</option>\n              <option value=\"LY\">Ливия</option>\n              <option value=\"LT\">Литва</option>\n              <option value=\"LI\">Лихтенштейн</option>\n              <option value=\"LU\">Люксембург</option>\n              <option value=\"MU\">Маврикий</option>\n              <option value=\"MR\">Мавритания</option>\n              <option value=\"MG\">Мадагаскар</option>\n              <option value=\"YT\">Майотта</option>\n              <option value=\"MO\">Макао (САР)</option>\n              <option value=\"MW\">Малави</option>\n              <option value=\"MY\">Малайзия</option>\n              <option value=\"ML\">Мали</option>\n              <option value=\"MV\">Мальдивы</option>\n              <option value=\"MT\">Мальта</option>\n              <option value=\"MA\">Марокко</option>\n              <option value=\"MQ\">Мартиника</option>\n              <option value=\"MH\">Маршалловы Острова</option>\n              <option value=\"MX\">Мексика</option>\n              <option value=\"MZ\">Мозамбик</option>\n              <option value=\"MD\">Молдова</option>\n              <option value=\"MC\">Монако</option>\n              <option value=\"MN\">Монголия</option>\n              <option value=\"MS\">Монтсеррат</option>\n              <option value=\"MM\">Мьянма (Бирма)</option>\n              <option value=\"NA\">Намибия</option>\n              <option value=\"NR\">Науру</option>\n              <option value=\"NP\">Непал</option>\n              <option value=\"NE\">Нигер</option>\n              <option value=\"NG\">Нигерия</option>\n              <option value=\"NL\">Нидерланды</option>\n              <option value=\"NI\">Никарагуа</option>\n              <option value=\"NU\">Ниуэ</option>\n              <option value=\"NZ\">Новая Зеландия</option>\n              <option value=\"NC\">Новая Каледония</option>\n              <option value=\"NO\">Норвегия</option>\n              <option value=\"BV\">о-в Буве</option>\n              <option value=\"IM\">о-в Мэн</option>\n              <option value=\"NF\">о-в Норфолк</option>\n              <option value=\"CX\">о-в Рождества</option>\n              <option value=\"SH\">о-в Св. Елены</option>\n              <option value=\"PN\">о-ва Питкэрн</option>\n              <option value=\"TC\">о-ва Тёркс и Кайкос</option>\n              <option value=\"HM\">о-ва Херд и Макдональд</option>\n              <option value=\"AE\">ОАЭ</option>\n              <option value=\"OM\">Оман</option>\n              <option value=\"KY\">Острова Кайман</option>\n              <option value=\"CK\">Острова Кука</option>\n              <option value=\"PK\">Пакистан</option>\n              <option value=\"PW\">Палау</option>\n              <option value=\"PS\">Палестинские территории</option>\n              <option value=\"PA\">Панама</option>\n              <option value=\"PG\">Папуа &mdash; Новая Гвинея</option>\n              <option value=\"PY\">Парагвай</option>\n              <option value=\"PE\">Перу</option>\n              <option value=\"PL\">Польша</option>\n              <option value=\"PT\">Португалия</option>\n              <option value=\"PR\">Пуэрто-Рико</option>\n              <option value=\"KR\">Республика Корея</option>\n              <option value=\"RE\">Реюньон</option>\n              <option value=\"RU\">Россия</option>\n              <option value=\"RW\">Руанда</option>\n              <option value=\"RO\">Румыния</option>\n              <option value=\"SV\">Сальвадор</option>\n              <option value=\"WS\">Самоа</option>\n              <option value=\"SM\">Сан-Марино</option>\n              <option value=\"ST\">Сан-Томе и Принсипи</option>\n              <option value=\"SA\">Саудовская Аравия</option>\n              <option value=\"MK\">Северная Македония</option>\n              <option value=\"MP\">Северные Марианские о-ва</option>\n              <option value=\"SC\">Сейшельские Острова</option>\n              <option value=\"BL\">Сен-Бартелеми</option>\n              <option value=\"MF\">Сен-Мартен</option>\n              <option value=\"PM\">Сен-Пьер и Микелон</option>\n              <option value=\"SN\">Сенегал</option>\n              <option value=\"VC\">Сент-Винсент и Гренадины</option>\n              <option value=\"KN\">Сент-Китс и Невис</option>\n              <option value=\"LC\">Сент-Люсия</option>\n              <option value=\"RS\">Сербия</option>\n              <option value=\"SG\">Сингапур</option>\n              <option value=\"SX\">Синт-Мартен</option>\n              <option value=\"SY\">Сирия</option>\n              <option value=\"SK\">Словакия</option>\n              <option value=\"SI\">Словения</option>\n              <option value=\"US\">Соединенные Штаты</option>\n              <option value=\"SB\">Соломоновы Острова</option>\n              <option value=\"SO\">Сомали</option>\n              <option value=\"SD\">Судан</option>\n              <option value=\"SR\">Суринам</option>\n              <option value=\"SL\">Сьерра-Леоне</option>\n              <option value=\"TJ\">Таджикистан</option>\n              <option value=\"TH\">Таиланд</option>\n              <option value=\"TW\">Тайвань</option>\n              <option value=\"TZ\">Танзания</option>\n              <option value=\"TG\">Того</option>\n              <option value=\"TK\">Токелау</option>\n              <option value=\"TO\">Тонга</option>\n              <option value=\"TT\">Тринидад и Тобаго</option>\n              <option value=\"TV\">Тувалу</option>\n              <option value=\"TN\">Тунис</option>\n              <option value=\"TM\">Туркменистан</option>\n              <option value=\"TR\">Турция</option>\n              <option value=\"UG\">Уганда</option>\n              <option value=\"UZ\">Узбекистан</option>\n              <option value=\"UA\">Украина</option>\n              <option value=\"WF\">Уоллис и Футуна</option>\n              <option value=\"UY\">Уругвай</option>\n              <option value=\"FO\">Фарерские о-ва</option>\n              <option value=\"FM\">Федеративные Штаты Микронезии</option>\n              <option value=\"FJ\">Фиджи</option>\n              <option value=\"PH\">Филиппины</option>\n              <option value=\"FI\">Финляндия</option>\n              <option value=\"FK\">Фолклендские о-ва</option>\n              <option value=\"FR\">Франция</option>\n              <option value=\"GF\">Французская Гвиана</option>\n              <option value=\"PF\">Французская Полинезия</option>\n              <option value=\"TF\">Французские Южные территории</option>\n              <option value=\"HR\">Хорватия</option>\n              <option value=\"CF\">Центрально-Африканская Республика</option>\n              <option value=\"TD\">Чад</option>\n              <option value=\"ME\">Черногория</option>\n              <option value=\"CZ\">Чехия</option>\n              <option value=\"CL\">Чили</option>\n              <option value=\"CH\">Швейцария</option>\n              <option value=\"SE\">Швеция</option>\n              <option value=\"SJ\">Шпицберген и Ян-Майен</option>\n              <option value=\"LK\">Шри-Ланка</option>\n              <option value=\"EC\">Эквадор</option>\n              <option value=\"GQ\">Экваториальная Гвинея</option>\n              <option value=\"ER\">Эритрея</option>\n              <option value=\"SZ\">Эсватини</option>\n              <option value=\"EE\">Эстония</option>\n              <option value=\"ET\">Эфиопия</option>\n              <option value=\"GS\">Южная Георгия и Южные Сандвичевы о-ва</option>\n              <option value=\"ZA\">Южно-Африканская Республика</option>\n              <option value=\"SS\">Южный Судан</option>\n              <option value=\"JM\">Ямайка</option>\n              <option value=\"JP\">Япония</option>\n            </Input>\n          </InputComponent>\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].docType`}\n          label=\"Тип документа\"\n          required\n          labelTextOrNode={\n            <>\n              <strong>Аббревиатуры типов документов:</strong>\n              <ul>\n                <li>\n                  <strong>ПН</strong> - Паспорт РФ\n                </li>\n                <li>\n                  <strong>ПС</strong> - Паспорт формы СССР\n                </li>\n                <li>\n                  <strong>ЗП</strong> - Заграничный паспорт\n                </li>\n                <li>\n                  <strong>ЗЗ</strong> - Иностранный документ\n                </li>\n                <li>\n                  <strong>ПМ</strong> - Удостоверение личности моряка\n                </li>\n                <li>\n                  <strong>СР</strong> - Свидетельство о рождении\n                </li>\n                <li>\n                  <strong>ВБ</strong> - Военный билет военнослужащих срочной\n                  службы, по контракту и курсантов\n                </li>\n                <li>\n                  <strong>ВЖ</strong> - Вид на жительство\n                </li>\n                <li>\n                  <strong>МС</strong> - Медицинское свидетельство о рождении\n                </li>\n              </ul>\n            </>\n          }\n          type=\"text\"\n        >\n          <InputComponent name={`passangers[${id}].docType`}>\n            <Input\n              component=\"select\"\n              id={`passangers[${id}].docType`}\n              name={`passangers[${id}].docType`}\n              className={\n                isInvalid(`passangers[${id}].docType`) ? \"invalid\" : \"\"\n              }\n            >\n              <option value=\"0\">не выбрано</option>\n              <option value=\"1\">Паспорт РФ</option>\n              <option value=\"2\">Паспорт формы СССР</option>\n              <option value=\"3\">Заграничный паспорт</option>\n              <option value=\"4\">Иностранный документ</option>\n              <option value=\"5\">Удостоверение личности моряка</option>\n              <option value=\"6\">Свидетельство о рождении</option>\n              <option value=\"7\">\n                Военный билет военнослужащих срочной службы, по контракту и\n                курсантов\n              </option>\n              <option value=\"11\">Вид на жительство</option>\n            </Input>\n          </InputComponent>\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].docNum`}\n          label=\"Номер документа\"\n          required\n          labelTextOrNode={\n            <>\n              <p>\n                <strong>\n                  Формат ввода номера российского паспорта нового образца:\n                </strong>\n              </p>\n              <ul>\n                <li>\n                  Серия: четыре цифры, номер: шесть цифр. Количество пробелов не\n                  имеет значения.{\" \"}\n                </li>\n              </ul>\n              <p>\n                При заполнении номера документа, удостоверяющего личность,\n                символ «№» не указывается. Данные паспорта или свидетельства о\n                рождении, выданного гражданам иностранных государств, вводятся с\n                заданием типа документа - иностранный документ.\n              </p>\n            </>\n          }\n          type=\"text\"\n        >\n          <MaskedInput\n            id={`passangers[${id}].docNum`}\n            name={`passangers[${id}].docNum`}\n            mask={inputMasksMap.docNum}\n            value={getIn(values, `passangers[${id}].docNum`)}\n            alwaysShowMask\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].tarif`}\n          label=\"Тариф\"\n          type=\"text\"\n          required\n        >\n          <InputComponent name={`passangers[${id}].tarif`}>\n            <Input\n              component=\"select\"\n              id={`passangers[${id}].tarif`}\n              name={`passangers[${id}].tarif`}\n              className={isInvalid(`passangers[${id}].tarif`) ? \"invalid\" : \"\"}\n              disabled={isTarifDisabled()}\n            >\n              <option value=\"\">не выбрано</option>\n              {isChild() && <option value=\"1\">Детский</option>}\n              <option value=\"2\">Полный</option>\n            </Input>\n          </InputComponent>\n        </Formfield>\n      </Fieldset>\n      <Fieldset mb={3}>\n        <InputComponent name={`passangers[${id}].agreement`}>\n          <label>\n            <Checkbox\n              checked={getIn(values, `passangers[${id}].agreement`)}\n              onChange={() =>\n                setFieldValue(`passangers[${id}].agreement`, !values.agreement)\n              }\n              name={`passangers[${id}].agreement`}\n              labelWrap={false}\n              disabled={true}\n            />\n            <Span ml={2} fontWeight=\"bold\">\n              Согласен на получение оповещений в случаях чрезвычайных ситуаций\n              на железнодорожном транспорте\n            </Span>\n          </label>\n        </InputComponent>\n      </Fieldset>\n      <P>\n        В соответствии с п.7 Правил перевозок пассажиров, багажа, грузобагажа\n        железнодорожным транспортом при покупке билета необходимо указать свои\n        контактные данные.\n      </P>\n      <Fieldset\n        display=\"grid\"\n        gridColumnGap={4}\n        gridRowGap={3}\n        gridTemplateColumns={{\n          sm: \"repeat(auto-fit, minmax(284px, 1fr))\",\n          lg: \"repeat(3, 1fr)\",\n        }}\n        mb={3}\n      >\n        <Formfield\n          name={`passangers[${id}].tel`}\n          label=\"Телефон\"\n          type=\"text\"\n          required\n        >\n          <MaskedInput\n            id={`passangers[${id}].tel`}\n            name={`passangers[${id}].tel`}\n            mask={inputMasksMap.tel}\n            value={getIn(values, `passangers[${id}].tel`)}\n            alwaysShowMask\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </Formfield>\n        <Formfield\n          name={`passangers[${id}].email`}\n          label=\"Email\"\n          type=\"text\"\n          required\n        ></Formfield>\n      </Fieldset>\n    </>\n  );\n};\n\nexport default Passanger;\n","export const isEmpty = (obj: object) => obj && Object.keys(obj).length === 0;\n","import { differenceInYears } from \"date-fns\";\n\nexport const calculateAge = (dob: Date): number => {\n  const age = differenceInYears(new Date(), dob);\n  return age;\n};\n","import React from \"react\";\nimport { Div } from \"../styled-components\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\ninterface LoadProps {\n  state?: boolean;\n}\n\nconst Load: React.FC<LoadProps> = ({ state = false, children }) => {\n  return (\n    <>\n      {state ? (\n        <Div display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader loading={state} size={100} />\n        </Div>\n      ) : (\n        children\n      )}\n    </>\n  );\n};\n\nexport default Load;\n","import { useFormikContext } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Div,\n  InfoPopup as InfoPopupComponents,\n  Span,\n} from \"../styled-components\";\nimport Load from \"./load\";\n\ninterface InfoPopupProps {\n  closeHanlder: () => void;\n  request: () => Promise<any>;\n  errorMessage: string;\n}\n\nconst InfoPopup: React.FC<InfoPopupProps> = ({\n  children,\n  closeHanlder,\n  request,\n  errorMessage,\n}) => {\n  const [isLoading, setLoading] = useState(false);\n  const [isSuccess, setSucceses] = useState<boolean | null>(null);\n  const { resetForm } = useFormikContext();\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n\n      try {\n        // здесь хотел сделать обработку ошибки через error message но апи возвращает undefined\n        const res = await request();\n        setSucceses(true);\n      } catch (e) {\n        setSucceses(false);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <InfoPopupComponents>\n      <Button\n        alignSelf=\"flex-end\"\n        className=\"close-button\"\n        onClick={() => {\n          closeHanlder();\n          resetForm();\n        }}\n      >\n        <svg className=\"close\" width=\"15\" height=\"15\" viewBox=\"0 0 352 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n          />\n        </svg>\n      </Button>\n      <Load state={isLoading}>\n        <Div\n          display=\"flex\"\n          justifyContent=\"center\"\n          align-items=\"center\"\n          height=\"100%\"\n        >\n          {isSuccess ? (\n            children\n          ) : (\n            <Span display=\"flex\" alignItems=\"center\" fontSize=\"30px\">\n              {errorMessage}\n            </Span>\n          )}\n        </Div>\n      </Load>\n    </InfoPopupComponents>\n  );\n};\n\nexport default InfoPopup;\n","import React from \"react\";\nimport { Diadlog as DiadlogComponent } from \"../styled-components\";\n\ninterface DialogProps {}\n\nconst Dialog: React.FC<DialogProps> = ({ children }) => {\n  return <DiadlogComponent>{children}</DiadlogComponent>;\n};\n\nexport default Dialog;\n","import { FieldArray, Formik } from \"formik\";\nimport React from \"react\";\nimport {\n  Button,\n  Span,\n  Form as FormComponent,\n  Heading,\n  Div,\n  PrimaryButton,\n  SecondaryButton,\n} from \"../styled-components\";\n\nimport * as yup from \"yup\";\nimport { telRegExp } from \"../utls/telRegExp\";\nimport { yupTest } from \"../constants/constans\";\nimport { submitForm } from \"../api/api\";\nimport Passanger from \"./passanger\";\nimport InfoPopup from \"./infoPopup\";\nimport Dialog from \"./dialog\";\n\ninterface FormProps {}\n\n//#TODO: адаптив(!)\n\nexport type FormInitialValues = {\n  surname: string;\n  name: string;\n  fathersName: string;\n  snils: string;\n  sex: number;\n  date: Date | null;\n  citezenship: string;\n  docType: number;\n  docNum: string;\n  tarif: number | string | null;\n  fss: boolean;\n  agreement: boolean;\n  tel: string;\n  email: string;\n};\n\nexport type FinalFormValues = {\n  passangers: FormInitialValues[];\n};\n\nconst Form: React.FC<FormProps> = () => {\n  const formInitialValues: FormInitialValues = {\n    surname: \"\",\n    name: \"\",\n    fathersName: \"\",\n    snils: \"\",\n    sex: 0,\n    date: null,\n    citezenship: \"AU\",\n    docType: 0,\n    docNum: \"\",\n    tarif: null,\n    fss: false,\n    agreement: true,\n    tel: \"\",\n    email: \"\",\n  };\n\n  const formInitialValue = {\n    passangers: [formInitialValues],\n  };\n\n  const schema = yup.object().shape({\n    passangers: yup.array().of(\n      yup.object().shape({\n        surname: yup\n          .string()\n          .matches(yupTest.rusLetters, \"Только русские буквы\")\n          .required(\"Обязательное поле\"),\n        name: yup\n          .string()\n          .matches(yupTest.rusLetters, \"Только русские буквы\")\n          .required(\"Обязательное поле\"),\n        fathersName: yup\n          .string()\n          .matches(yupTest.rusLetters, \"Только русские буквы\")\n          .required(\"Обязательное поле\"),\n        snils: yup\n          .string()\n          .length(14, \"Номер снилса указан неверно\")\n          .required(\"Обязательное поле\"),\n        sex: yup.string().required(\"Обязательное поле\"),\n        date: yup\n          .date()\n          .typeError(\"Не выбрана дата\")\n          .required(\"Обязательное поле\"),\n        citezenship: yup.string().required(\"Обязательное поле\"),\n        docType: yup\n          .number()\n          .moreThan(0, \"Нужно выбран тип документа\")\n          .required(\"Обязательное поле\"),\n        docNum: yup.number().required(\"Обязательное поле\"),\n        tarif: yup\n          .string()\n          .typeError(\"Не выбран тариф\")\n          .required(\"Обязательное поле\"),\n        agreement: yup.boolean().required(\"Обязательное поле\"),\n        tel: yup\n          .string()\n          .matches(telRegExp, \"Номер телефона введен не полностью\")\n          .required(\"Это обязательное поле\"),\n        email: yup\n          .string()\n          .email(\"Неверно введен email\")\n          .required(\"Обязательное поле\"),\n      })\n    ),\n  });\n\n  const onFormSubmitHanlder = async (values: FinalFormValues) => {\n    try {\n      const res = await submitForm(values);\n      return res;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  return (\n    <>\n      <Heading hidden>Форма заказа</Heading>\n\n      <Formik\n        initialValues={formInitialValue}\n        validationSchema={schema}\n        onSubmit={() => console.log(true)}\n      >\n        {({\n          values,\n          dirty,\n          isValid,\n          setSubmitting,\n          isSubmitting,\n          resetForm,\n        }) => (\n          <FormComponent display=\"flex\" flexDirection=\"column\">\n            <FieldArray\n              name=\"passangers\"\n              render={(helpers) => (\n                <>\n                  {values.passangers.map((el, idx) => (\n                    <>\n                      <Div\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        flexDirection={{ sm: `column`, md: `row` }}\n                      >\n                        <Heading\n                          as=\"h2\"\n                          color=\"secondary\"\n                          fontSize=\"2em\"\n                          margin=\"10px 0\"\n                        >\n                          Пассажир №{idx + 1}: место для инвалида\n                        </Heading>\n                        <Button\n                          type=\"button\"\n                          color=\"secondary\"\n                          bg=\"transparent\"\n                          position=\"relative\"\n                          disabled={values.passangers.length < 2}\n                          onClick={() => helpers.remove(idx)}\n                        >\n                          <Span position=\"absolute\" top=\"11px\" left=\"-25px\">\n                            <svg\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              fill=\"currentColor\"\n                            >\n                              <path d=\"M0 10h24v4h-24z\" />\n                            </svg>\n                          </Span>\n                          <Span fontSize=\"120%\">Удалить пассажира</Span>\n                        </Button>\n                      </Div>\n                      <Passanger id={idx} />\n                    </>\n                  ))}\n                  <Div\n                    display=\"flex\"\n                    pt={3}\n                    flexDirection={{ sm: `column`, md: `row` }}\n                  >\n                    <SecondaryButton\n                      type=\"button\"\n                      mb={{ sm: 3, md: 0 }}\n                      mr={{ md: 3 }}\n                      onClick={() => {\n                        console.log(helpers);\n                        helpers.push(formInitialValues);\n                      }}\n                    >\n                      Добавить пассажира\n                    </SecondaryButton>\n                    <SecondaryButton\n                      type=\"button\"\n                      mb={{ sm: 3, md: 0 }}\n                      mr={{ md: \"auto\" }}\n                      onClick={() => {\n                        resetForm();\n                      }}\n                    >\n                      Очистить форму\n                    </SecondaryButton>\n                    <PrimaryButton\n                      type=\"submit\"\n                      p={2}\n                      disabled={!dirty || isSubmitting || !isValid}\n                      onClick={() => setSubmitting(true)}\n                      mb={{ sm: 3, md: 0 }}\n                      alignSelf={{ md: \"flex-end\" }}\n                    >\n                      Зарезервировать места\n                    </PrimaryButton>\n                  </Div>\n                </>\n              )}\n            />\n            {isSubmitting && (\n              <Dialog>\n                <InfoPopup\n                  request={async () => onFormSubmitHanlder(values)}\n                  closeHanlder={() => setSubmitting(false)}\n                  errorMessage=\"Не удалось отправить форму\"\n                >\n                  <Span\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    textAlign={{ sm: \"center\", md: \"left\" }}\n                    fontSize={{ sm: \"25px\", md: \"30px\" }}\n                  >\n                    Форма успешно отправлена!\n                  </Span>\n                </InfoPopup>\n              </Dialog>\n            )}\n          </FormComponent>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default Form;\n","import { Breakpoints } from \"./types/styled.d\";\nimport { DefaultTheme } from \"styled-components\";\n\nconst customMediaQuery = (maxWidth: number) => `${maxWidth}px`;\n\nconst breakPointsMap = {\n  xl: customMediaQuery(1980),\n  lg: customMediaQuery(988),\n  md: customMediaQuery(768),\n  sm: customMediaQuery(320),\n};\n\nlet breakpoints: Breakpoints = [\n  breakPointsMap.sm,\n  breakPointsMap.md,\n  breakPointsMap.lg,\n  breakPointsMap.xl,\n];\n\nbreakpoints = {\n  ...breakpoints,\n  ...{\n    sm: breakpoints[0],\n    md: breakpoints[1],\n    lg: breakpoints[2],\n    xl: breakpoints[3],\n  },\n};\n\nexport const theme: DefaultTheme = {\n  breakPoints: breakPointsMap,\n  breakpoints,\n  fontSizes: {\n    sm: \"14px\",\n    md: \"16px\",\n    xl: \"18px\",\n  },\n\n  fontWeights: {\n    regular: 300,\n    medium: 500,\n    bold: 700,\n  },\n\n  lineHeights: {\n    sm: 1,\n    md: 1.25,\n    xl: 1.5,\n  },\n\n  radii: {\n    sm: \"2px\",\n    md: \"4px\",\n    xl: \"8px\",\n  },\n\n  up: (breakpoint) => `@media (min-width: calc(${breakpoint} + 0.02px))`,\n  down: (breakpoint) => `@media (max-width: ${breakpoint})`,\n\n  colors: {\n    black: \"#333\",\n    white: \"#fff\",\n    primary: \"#333\",\n    secondary: \"#e21a1a\",\n    inactive: \"#eee\",\n    grey: \"#e5e5e5\",\n  },\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Form from \"./components/form\";\nimport { Wrapper } from \"./styled-components\";\nimport { theme } from \"./theme\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Wrapper>\n          <Form />\n        </Wrapper>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nexport const store = configureStore({\n  reducer: {},\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}